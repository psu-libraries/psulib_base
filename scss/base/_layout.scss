.dialog-off-canvas-main-canvas {
  min-height: 100vh;

  footer {
    flex-grow: 1;
  }
}

.node-preview-container {
  background-color: $white;
  .node-preview-backlink {
    @extend .btn;
    @extend .btn-outline-primary !optional;
  }

  .form-type-select {
    margin: 0;
  }
}

@include media-breakpoint-up('md') {
  .region-nav-branding,
  .region-nav-additional {
    flex-shrink: 0;
  }
}

// Add a max width the container-fluid and increasing padding on larger
// displays.
.container-fluid {
  max-width: calc(map-get($container-max-widths, xxl) + 3rem);
  padding-left: 1.5rem;
  padding-right: 1.5rem;

  @include media-breakpoint-up(md) {
    max-width: calc(map-get($container-max-widths, xxl) + 6rem);

    padding-left: 3rem;
    padding-right: 3rem;
  }
}

// min-width is defined to win against competing width and max-width, meaning
// as soon as the element's width would shrink below its implicit auto width,
// min-width:auto will kick in and keep the element from shrinking.
// @see https://stackoverflow.com/a/66689926
.region-content-wrapper {
  min-width: 0;
}

// Adding styles give the sidebar a fixed width.
@include media-breakpoint-up(md) {
  .col-lg-w350 {
    flex-grow: 0;
    flex-basis: 350px;
  }

  .col-lg-w300 {
    flex-grow:0;
    flex-basis: 300px;
  }
}

.lb-display {
  .region-content {
    margin-bottom: 0;
  }

  // Sections in layout builder have a top and bottom padding of 3rem.
  .node__content > div {
    padding-top: $spacer * 1.5;
    padding-bottom: $spacer * 1.5;
  }
}
